In this project, we implement our first fully MVC capable application using Spring, Thymeleaf, HTML, and CSS. We define controllers using @Controller which act as the business logic layer of our application. We write basic HTML pages to create the view and use @RequestMapping in our controller to direct our application to these pages using the defined endpoints. Finally, we add data to our Model to be stored / retrieved as necessary. The model here is really just an interface for “storing” our attributes, but it’s not actually connected to a database or anything yet. 
Important to note that the name of the attributes in our model must match the name of the “th” (thymeleaf) object that we declare on our HTML form. The same goes for the name of the endpoints we define in our controller vs the name we declare for th:action in the HTML form. They must match up perfectly. 

Once the initial structure was setup, we then began leveraging different types of HTML input to give our page some flavor. Each of these inputs, such as text input fields, drop down lists, radio buttons, check boxes, etc, was connected to our StudentController, where the “business logic” of our app performed basic operations on them (mostly just passing data through) and the results were printed on a confirmation web page. We also learned how to link Thymeleaf values to our app.properties file. 
